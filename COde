from turtle import right # Importing the turtle module

import dark as dark # Importing dark
import pygame
import sys
from math import *
pygame.init


width = 700
hieght = 700

display = pygame.display.set_mode((width, hieght))
clock = pygame.title.Clock()
pygame.display.set_caption("THE INFAMOUS FIDGET SPINNER")

#For Some Colours

background = (55, 55 ,55)
white = (240, 240 , 240)
red = (178,56,46)
dark_red = (120,40,31)
dark_gray= (23,32,42)
blue = (40,116,166)
yellow = (183,149,11)
dark_blue = (26,82,118)
green = (29,131,72)
dark_green = (20,90,50)
orange = (230,126,34)
dark_orange = (126,81,9)
dark_yellow =(125,102,8)


#closing of Pygame Window

def close(): # close - the c was capital
    pygame.quit()
    sys.exit()


#The Illustration o0f our fidget Spinner
def show_Spinner(angle, color ,dark_color):
    d = 80
    innerd = 50
    x = width/2 - d/2
    y = hieght / 2
    l = 200
    r = l /(3**0.5)
    w = 10
    lw = 60


    #MATHS

    centre = [x, y, d. d]
    centre_inner = [x, + d/2 - innerd/2, y +  innerd/2, innerd , innerd]

    top = [ x, y, - 1/(3)**0.5, d, d]
    top_inner = [x , y - 1/(3)*0.5, innerd, innerd]

    top[0] = x + r*cos(radians(angle))
    top[1] = y + r*sin(radians(angle))

    top_inner[0] = x + d/2 - innerd/2 + r *cos(radians(angle))
    top_inner[1] = y + d/2 - innerd/2 + r*sin(radians(angle))

    left = [x -1/2, y + 1/(2*3**0.5), d. d ]
    left_inner = [x,  y - 1/(3)**0.5, innerd, innerd]

    left[0] = x + r*cos(radians(angle - 120))
    left[1] = y + r*sin(radians(angle - 120)) # 1st edit
    left_inner[0] = x + d/2 - innerd/2 + r*cos(radians(angle - 120))
    left_inner[1] = y + d/2 - innerd/2 + r*sin(radians(angle - 120))

    right[0] = x + r*cos(radians(angle + 120))
    right[1] = y + r*sin(radians(angle + 120))
    right_inner[0] = x + d / 2 - innerd / 2 + r * cos(radians(angle - 120)) # right_inner and right are not defined explicitly
    right_inner[1] = y + d / 2 - innerd / 2 + r * sin(radians(angle - 120))




    #So Now The shapes on Window
    pygame.draw.line(display, dark_color, (top[0] + d/2,top[1] + d/2), (centre[0] + d/2, centre[1] + d/2, lw))
    pygame.draw.line(display, dark_color, (left[0] + d / 2, left[1] + d / 2), (centre[0] + d / 2, centre[1] + d / 2, lw))
    pygame.draw.line(display, dark_color, (right[0] + d / 2, right[1] + d / 2), (centre[0] + d / 2, centre[1] + d / 2, lw))
    pygame.draw.elliipse(display, color , tuple(centre))
    pygame.draw.elliipse(display, dark_color, tuple(centre_inner))
    pygame.draw.elliipse(display, color, tuple(top))
    pygame.draw.elliipse(display, dark_gray, tuple(top_inner), 10)
    pygame.draw.elliipse(display, color, tuple(left))
    pygame.draw.elliipse(display, color, tuple(left_inner), 10)
    pygame.draw.elliipse(display, color, tuple(right))
    pygame.draw.elliipse(display, color, tuple(right_inner), 10)

    #INFORAMATION OF PYGME WINDOW

def showinfo(friction, speed):

    font = pygame.font.SysFont("Times New Roman", 20)
    frictionText = font.render("Friction: ", str(friction), True, white)
    speedText = font.render("Rate of Change of angle :" + str(speed), True, white)
    display.blit(speedText, (15,15))
    display.blit(frictionText, (15, 45))


   #The Main Jiissee yeh function chalega
def spinner():
    spin = True
    angle = 0

    speed = 0.0

    friction = 0.05
    rightpressed = False
    leftpressed = False

    direction = 1
    color = [[red, dark_red], [blue,dark_blue], [yellow, dark, yellow], [green, dark_green], [orange, dark_orange]]
    index = 0 # edit z - x


    while spin:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                close()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_q:
                    close()
                if event.key == pygame.K_RIGHT:
                    rightpressed = True
                    direction = 1
                if event.key == pygame.K_LEFT:
                    leftpressed = True
                    direction = -1
                if event.key == pygame.K_SPACE:
                    index += 1
                    if index >= len(color):
                            index = 0
            if event.type == pygame.KEYUP:
                leftpressed = False
                rightpressed = False

        #Changing Direction OF Rotation

        if direction == 1:
             if rightpressed:
                 speed += 0.3
             else:

                 speed -= friction
                 if speed < 0 :
                    speed = 0.0

        else:
             if leftpressed:
                 speed -= 0.3
             else:
                 speed += friction
                 if speed > 0:
                     speed = 0.0

        display.fill(background)
        angle += speed

    show_Spinner(angle, color[index][0], color[index][1])
    show_info(friction, speed) # show_info() not defined in the function

    pygame.display.update()
    clock.tick(90)

spinner()































